<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="PropertyItemButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Foreground" Value="{DynamicResource DetailsViewContainerTextBrush}" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock FontSize="{TemplateBinding FontSize}"
                               Foreground="{TemplateBinding Foreground}"
                               Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}"
                               TextWrapping="{TemplateBinding TextBlock.TextWrapping}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBrushDarker}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyItemLinkButton" TargetType="Button" BasedOn="{StaticResource PropertyItemButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <DockPanel>
                        <Viewbox DockPanel.Dock="Left" Margin="0,0,5,0" Width="18" Height="18"
                                 VerticalAlignment="Center"
                                 Visibility="{PluginStatus Plugin=felixkmh_Extras_Plugin, Status=Installed}"
                                 RenderOptions.ClearTypeHint="Enabled" RenderOptions.BitmapScalingMode="Fant">
                            <ContentControl Content="{Binding Value, TargetNullValue={StaticResource LinksIcon}}"
                                            DataContext="{Binding Url, Converter={PluginConverter Plugin=ThemeExtras, Converter=UrlToAsyncIconConverter}}"/>
                        </Viewbox>
                        <TextBlock DockPanel.Dock="Left" FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="{TemplateBinding TextBlock.TextWrapping}"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PropertyItemButtonNoWrap" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Foreground" Value="{DynamicResource DetailsViewContainerTextBrush}" />
        <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock FontSize="{TemplateBinding FontSize}" FontWeight="Medium"
                               Foreground="{TemplateBinding Foreground}"
                               Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}"
                               TextWrapping="{TemplateBinding TextBlock.TextWrapping}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBrushDarker}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="PropertyItemFeedPanelButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="3,1,3,1" />
        <Setter Property="Padding" Value="12,4,12,4" />
        <Setter Property="Background" Value="#59657180" />
        <Setter Property="Foreground" Value="{DynamicResource DetailsViewLinksTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Border Name="BorderMouseOver" Background="{TemplateBinding Background}" CornerRadius="2"
                                Opacity="0.0"/>
                        <Border Padding="{TemplateBinding Padding}" >
                            <TextBlock FontSize="{TemplateBinding FontSize}" FontWeight="Medium"
                               Foreground="{TemplateBinding Foreground}"
                               Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}"
                               TextWrapping="NoWrap"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" >
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                To="1.0" Storyboard.TargetName="BorderMouseOver"
                                                Duration="0:0:0.30">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.0" Storyboard.TargetName="BorderMouseOver"
                                                Duration="0:0:0.30">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyItemLinksPanelButton" TargetType="Button" BasedOn="{StaticResource PropertyItemFeedPanelButton}">
        <Setter Property="Margin" Value="11,1,11,1" />
        <Setter Property="Padding" Value="12,4,12,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Border Name="BorderMouseOver" Background="{TemplateBinding Background}" CornerRadius="2"
                                Opacity="0.0"/>
                        <Border Padding="{TemplateBinding Padding}" >
                            <DockPanel>
                                <Viewbox DockPanel.Dock="Left" Margin="0,0,5,0" Width="18" Height="18"
                                         VerticalAlignment="Center"
                                         Visibility="{PluginStatus Plugin=felixkmh_Extras_Plugin, Status=Installed}"
                                         RenderOptions.ClearTypeHint="Enabled" RenderOptions.BitmapScalingMode="Fant">
                                    <ContentControl Content="{Binding Value, TargetNullValue={StaticResource LinksIcon}}"
                                                    DataContext="{Binding Url, Converter={PluginConverter Plugin=ThemeExtras, Converter=UrlToAsyncIconConverter}}"/>
                                </Viewbox>
                                <TextBlock FontSize="{TemplateBinding FontSize}" FontWeight="Medium"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}"
                                           TextWrapping="NoWrap"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" >
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                To="1.0" Storyboard.TargetName="BorderMouseOver"
                                                Duration="0:0:0.30">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.0" Storyboard.TargetName="BorderMouseOver"
                                                Duration="0:0:0.30">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>